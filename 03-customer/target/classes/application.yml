server:
  port: 8081   # 端口
  context-path: /
  error:
    include-exception: true
#  servlet:
#    context-path: /


#指定Eureka服务地址
eureka:
  client:
    allow-redirects: false
    service-url:
#      defaultZone: http://root:root@localhost:8761/eureka,http://root:root@localhost:8762/eureka
      defaultZone: http://root:root@119.29.161.208:8761/eureka
#      defaultZone: http://root:root@192.168.237.131:8761/eureka
#      defaultZone: http://root:root@127.0.0.1:8761/eureka


#指定服务名称
spring:
  application:
    name: CUSTOMER
  redis:
    port: 6379
#    host: 119.29.161.208
#    host: 192.168.237.131
    host: 127.0.0.1
    database: 0
    password:
    #连接池最大连接数（使用负值表示没有限制）
    lettuce:
      pool:
        max-active: 8 #连接池最大连接数
        max-wait: 10000ms  # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
      # 连接超时时间（毫秒）
      timeout: 100ms
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/it_study?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
#    url: jdbc:mysql://119.29.161.208:3306/it_study?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
#    url: jdbc:mysql://192.168.237.131:3306/it_study?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: a1b2c3
    type: com.alibaba.druid.pool.DruidDataSource
    #初始化数量
    initialSize: 1
    # 最小生存数
    minIdle: 1
    #最大活跃数
    maxActive: 10
    #最大连接等待超时时间
    maxWait: 60000
    #打开PSCache，并且指定每个连接PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置间隔多久检测一次，检测需要关闭的空闲连接，单位毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置最小生存时间
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    #配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
    filters: stat, wall, log4j
#  生产者-配置文件
#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: itStudy
#    password: itStudy
#    virtual-host: /itStudy
## 指定重复消费问题
#  cloud:
#    stream:
#      bindings: # 在此处配置要绑定的rabbitmq的服务信息；
#        itStudyCustomer:  # 表示定义的名称，用于于binding整合
#          type: rabbit # 消息组件类型
#          group: CUSTOMER
#      # 实现手动ACK
#      rabbit:
#        bindings: # 服务的整合处理
#          itStudyCustomer:  # 这个名字是一个通道的名称
#            consumer:
#              acknowledgeMode: MANUAL


mybatis:
  mapper-locations: mapper/*.xml
  type-aliases-package: com.itStudy.dao
  configuration:
    call-setters-on-nulls: true

mapper:
  mappers:
    - com.itStudy.dao
  # 设置 insert 和 update 中，是否判断字符串类型!=''
  notEmpty: true
  # 设置实体和表转换时的默认规则 normal为原值
  style: normal
  # 删除需要条件，否则不执行
  # safeDelete=true
  identity: MYSQL

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql